package comands

import (
	"fmt"
	"io/ioutil"
	"os"

	"CruptoCLI/modules"
)

// DecryptFileCommand ‚Äî —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤—ã–≤–∞–µ—Ç –æ–¥–∏–Ω —Ñ–∞–π–ª
func DecryptFileCommand(input, output string, key []byte) error {
	fmt.Printf("üîì –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ —Ñ–∞–π–ª–∞: %s ‚Üí %s\n", input, output)

	cipherData, err := ioutil.ReadFile(input)
	if err != nil {
		return fmt.Errorf("–Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª: %v", err)
	}

	plainData, err := modules.MultiLayerDecrypt(cipherData, key)
	if err != nil {
		return fmt.Errorf("–æ—à–∏–±–∫–∞ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏: %v", err)
	}

	// –£–±–∏—Ä–∞–µ–º MagicHeader
	plainData = RemoveMagic(plainData)

	err = os.WriteFile(output, plainData, 0644)
	if err != nil {
		return fmt.Errorf("–Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç—å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª: %v", err)
	}

	fmt.Printf("‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω: %s ‚Üí %s\n", input, output)
	return nil
}
